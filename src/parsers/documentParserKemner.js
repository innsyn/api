/* Copyright 2019 Schibsted */

// 1. pre-process pdf with pdftosjon (better ordering than the default documentcloud output)
// 2. print out text elements to file/string
// 3. parse

/***
 *
 * Can parse:
 * Kemneren Oslo
 *
 */
module.exports = {
  /***
   * The parse method for "Kemner" (Oslo) will extract data from the raw text generated by DocumentCloud
   * for a PDF.
   * To determine if the parser was able to parse the file, check the returnValue.parsed field
   * (true|false).
   */
  parse: function(raw) {
    var topDown = require('./topDownParser');

    try {
      var result = topDown.parse(raw, this.options);

      if (result.parsed) {
        // add expected fields (sender, receiver)
        for (var index = 0; index < result.items.length; index++) {
          var item = result.items[index];

          item.receiver = item.sender = '';

          // picking up document type when sender/receiver has been
          // screened
          if (
            !(item.senderOrReceiver === 'I' || item.senderOrReceiver === 'U')
          ) {
            if (item.senderOrReceiverLabel == 'Til:') {
              item.receiver = item.senderOrReceiver;
            } else {
              item.sender = item.senderOrReceiver;
            }
          }

          item.documentDate = getDateFromString(item.documentDate);
          item.recordedDate = getDateFromString(item.recordedDate);
        }
        return {
          parsed: true,
          items: result.items,
        };
      }

      return result;
    } catch (e) {
      return { parsed: false, error: e };
    }

    /***
     * Converts a string with the format "ddmmyyyy" to a date object.
     */
    function getDateFromString(dateString) {
      try {
        if (dateString.length === 8) {
          var year = dateString.substring(4, 8);
          var month = dateString.substring(2, 4);
          var day = dateString.substring(0, 2);
        } else {
          return '';
        }
        /*
         Parse the date as a string to avoid one day offset
         http://stackoverflow.com/questions/7556591/javascript-date-object-always-one-day-off)
         */
        return new Date('"' + year + '/' + month + '/' + day + '"');
      } catch (e) {
        return '';
      }
    }
  },

  options: {
    fields: [
      {
        name: 'caseNumber',
        regexList: [/(\d{1,3}\/\d{1,6}-\d{1,4})/],
      },
      {
        name: 'caseTitle',
        regexList: [
          /Sak:\n\nDok.dato:.*\nJour.dato:.*\nGrad:.*\n.*\n(.*)/,
          /Sak:([\s\S]*?)Dok:/,
        ],
      },
      {
        name: 'documentTitle',
        regexList: [
          /Dok:\n\nDok.dato:.*\nJour.dato:.*\nGrad:.*\n.*\n(.*)/,
          /Dok:([\s\S]*?)Saksansv:/,
        ],
      },
      {
        name: 'documentDate',
        regexList: [/Dok.dato: (.*)/],
      },
      {
        name: 'recordedDate',
        regexList: [/Jour.dato: (.*)/],
      },
      {
        name: 'senderOrReceiver',
        regexList: [/Grad.*\n(.*)/],
      },
      {
        name: 'senderOrReceiverLabel',
        regexList: [/(Til:|Fra:)/],
      },
      {
        name: 'caseOfficer',
        regexList: [/Saksbeh:(.*)/],
      },
      {
        name: 'caseResponsible',
        regexList: [/Saksansv:(.*)/],
      },
      {
        name: 'legalParagraph',
        regexList: [/Par.:(.*)/],
      },
      {
        name: 'classification',
        regexList: [/Grad:(.*)Par.:/],
      },
      {
        name: 'documentType',
        regexList: [/\n(I|U)\n/],
      },
    ],

    noise: [/Oslo Kemnerkontor[^]+?Periode:\n/g, /Side\d*/g],
  },
};
